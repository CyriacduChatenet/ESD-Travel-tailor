name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install npm
        uses: actions/setup-node@v1
        with:
            node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Build NestJS app
        working-directory: ./apps/api
        run: npm run build

      - name: Deploy NestJS app to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_API_APP_ID }}
          # vercel-project-name: apps
          vercel-scope: your-vercel-username
          vercel-build-env: production
          vercel-args: --prod --scope apps

      - name: Build NextJS app
        working-directory: ./apps/client
        run: npm run build

      - name: Deploy NextJS app to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_CLIENT_APP_ID }}
          # vercel-project-name: apps
          vercel-scope: your-vercel-username
          vercel-build-env: production
          vercel-args: --prod --scope apps
          


# name: 'Publish update'
# on:
#   push:
#     branches:
#       - main

# jobs:
#   install-dependancies:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build ui lib
        # uses: actions/setup-node@v1
        # with:
        #     node-version: '18.x'
#       - run: npm i

#   format-files:
#     needs: install-dependancies
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - run: cd apps/api && npm run format && cd ../../
#       - run: cd apps/client && npm run format && cd ../../
#       - run: cd packages/constants && npm run format && cd ../../
#       - run: cd packages/contexts && npm run format && cd ../../
#       - run: cd packages/functions && npm run format && cd ../../
#       - run: cd packages/hooks && npm run format && cd ../../
#       - run: cd packages/services && npm run format && cd ../../
#       - run: cd packages/styles && npm run format && cd ../../
#       - run: cd packages/types && npm run format && cd ../../
#       - run: cd packages/ui && npm run format && cd ../../
#       - run: cd packages/utils && npm run format && cd ../../

#   build-project:
#     needs: format-files
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - run: cd apps/api && npm run build && cd ../../
#       - run: cd apps/client && npm run build && cd ../../
#       - run: cd packages/styles && npm run build && cd ../../
#       - run: cd packages/ui && npm run build && cd ../../

#   deploy:
#     needs: build-project
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Install dependencies
#         uses: actions/setup-node@v1
#         with:
#             node-version: '18.x'
#       - run: npm ci

      # - name: Build and deploy apps
      #   uses: amondnet/vercel-action@v20
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-name: apps
      #     vercel-scope: your-vercel-username
      #     vercel-build-env: production
      #     vercel-args: --prod --scope apps

#       - name: Success message
#         run: echo "Apps deployed to Vercel!"